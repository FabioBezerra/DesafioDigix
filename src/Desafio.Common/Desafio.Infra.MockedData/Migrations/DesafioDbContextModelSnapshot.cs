// <auto-generated />
using System;
using Desafio.Infra.MockedData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Desafio.Infra.MockedData.Migrations
{
    [DbContext(typeof(DesafioDbContext))]
    partial class DesafioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Desafio.Domain.FamiliaDomain.Familia", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(900)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Familia");
                });

            modelBuilder.Entity("Desafio.Domain.PessoaDomain.Pessoa", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(900)");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("date");

                    b.Property<string>("FamiliaId")
                        .HasColumnType("nvarchar(900)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamiliaId");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("Desafio.Domain.RendaDomain.Renda", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(900)");

                    b.Property<string>("FamiliaId")
                        .HasColumnType("nvarchar(900)");

                    b.Property<string>("PessoaId")
                        .HasColumnType("nvarchar(900)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("FamiliaId");

                    b.HasIndex("PessoaId")
                        .IsUnique()
                        .HasFilter("[PessoaId] IS NOT NULL");

                    b.ToTable("Renda");
                });

            modelBuilder.Entity("Desafio.Domain.PessoaDomain.Pessoa", b =>
                {
                    b.HasOne("Desafio.Domain.FamiliaDomain.Familia", "Familia")
                        .WithMany("Pessoas")
                        .HasForeignKey("FamiliaId");

                    b.Navigation("Familia");
                });

            modelBuilder.Entity("Desafio.Domain.RendaDomain.Renda", b =>
                {
                    b.HasOne("Desafio.Domain.FamiliaDomain.Familia", "Familia")
                        .WithMany("Rendas")
                        .HasForeignKey("FamiliaId");

                    b.HasOne("Desafio.Domain.PessoaDomain.Pessoa", "Pessoa")
                        .WithOne("Renda")
                        .HasForeignKey("Desafio.Domain.RendaDomain.Renda", "PessoaId");

                    b.Navigation("Familia");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Desafio.Domain.FamiliaDomain.Familia", b =>
                {
                    b.Navigation("Pessoas");

                    b.Navigation("Rendas");
                });

            modelBuilder.Entity("Desafio.Domain.PessoaDomain.Pessoa", b =>
                {
                    b.Navigation("Renda");
                });
#pragma warning restore 612, 618
        }
    }
}
